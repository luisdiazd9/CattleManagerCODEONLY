/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import datos.*;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import reglas.*;

/**
 *
 * @author Usuario
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    ArbolBinario arbol = new ArbolBinario();
    Vaca animalActual = null;
    login.Registro mod;
    int usuarioAdmin = 0, vacaMadre = 0, cambio = 0; //Cambio valida qué se etá cambiando en el panel del cambio, igual que el switch
    DateFormat formatoFecha = new SimpleDateFormat("dd/MM/YYYY");
    
    public Principal() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/Imagenes/LogoCt.png")).getImage());
        setLocationRelativeTo(null);
        panelAgregar.setVisible(false);
        panelCambios.setVisible(false);
        panelFechaSacrificio.setVisible(false);
        colocarDatos(animalActual);
    }

    public Principal(login.Registro mod) throws IOException {
        initComponents();
        this.mod = mod;
        this.setIconImage(new ImageIcon(getClass().getResource("/Imagenes/LogoCt.png")).getImage());
        setLocationRelativeTo(null);
        if (mod.getId_tipo() == 1) { //es admin
            usuarioAdmin = 0;
        } else {//usuario común
            usuarioAdmin = 1;
        }
        nombreUsuarioLabel.setText(mod.getNombre());
        panelAgregar.setVisible(false);
        panelCambios.setVisible(false);
        panelFechaSacrificio.setVisible(false);
        colocarDatos(animalActual);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        nombreUsuarioLabel = new javax.swing.JLabel();
        usuarioLabel = new javax.swing.JLabel();
        panelFechaSacrificio = new javax.swing.JPanel();
        labelSacrificioPanel = new javax.swing.JLabel();
        confirmarFechaPanel = new javax.swing.JButton();
        calendarioSacrificio = new com.toedter.calendar.JDateChooser();
        fondoPanelFechaSacrificio = new javax.swing.JLabel();
        panelAgregar = new javax.swing.JPanel();
        labelRaza = new javax.swing.JLabel();
        agregarLabel = new javax.swing.JLabel();
        labelUso = new javax.swing.JLabel();
        labelIncorp = new javax.swing.JLabel();
        labelNace = new javax.swing.JLabel();
        labelMadre = new javax.swing.JLabel();
        labelSexo = new javax.swing.JLabel();
        labelId = new javax.swing.JLabel();
        textoId = new javax.swing.JTextField();
        textoRaza = new javax.swing.JTextField();
        textoIdMadre = new javax.swing.JTextField();
        comboSexo = new javax.swing.JComboBox<>();
        comboProceso = new javax.swing.JComboBox<>();
        avisoId = new javax.swing.JLabel();
        avisoIdMadre = new javax.swing.JLabel();
        cancelarAgregarBoton = new javax.swing.JButton();
        confirmarAgregarBoton = new javax.swing.JButton();
        calendarioIncorporacion = new com.toedter.calendar.JDateChooser();
        calendarioNacimiento = new com.toedter.calendar.JDateChooser();
        fondoPanel = new javax.swing.JLabel();
        panelCambios = new javax.swing.JPanel();
        botonConfirmarCambios = new javax.swing.JButton();
        botonCancelarCambios = new javax.swing.JButton();
        seleccionCambioProposito = new javax.swing.JComboBox<>();
        calendarioCambio = new com.toedter.calendar.JDateChooser();
        labelCambioIncorporacion = new javax.swing.JLabel();
        tituloCambiosLabel = new javax.swing.JLabel();
        labelCambioProposito = new javax.swing.JLabel();
        labelCambioNacimiento = new javax.swing.JLabel();
        labelCambioSacrificio = new javax.swing.JLabel();
        sexoLabel = new javax.swing.JLabel();
        datosAnimalLabel = new javax.swing.JLabel();
        razaLabel = new javax.swing.JLabel();
        fechaNacLabel = new javax.swing.JLabel();
        propositoLabel = new javax.swing.JLabel();
        madreLabel = new javax.swing.JLabel();
        fechaSacrificioLabel = new javax.swing.JLabel();
        codIdLabel = new javax.swing.JLabel();
        fechaIncorpLabel = new javax.swing.JLabel();
        estadoLabel = new javax.swing.JLabel();
        agregarAnimalBoton = new javax.swing.JButton();
        buscarTextField = new javax.swing.JTextField();
        buscarLabel = new javax.swing.JLabel();
        recomendacionBuscarLabel = new javax.swing.JLabel();
        generarCertificadoBoton = new javax.swing.JButton();
        salirBoton = new javax.swing.JButton();
        sexoMMuestra = new javax.swing.JLabel();
        sexoHMuestra = new javax.swing.JLabel();
        sexoVMuestra = new javax.swing.JLabel();
        razaMuestra = new javax.swing.JLabel();
        fechaNacMuestra = new javax.swing.JLabel();
        propositoMuestra = new javax.swing.JLabel();
        codMadreMuestra = new javax.swing.JLabel();
        fechaIncorpMuestra = new javax.swing.JLabel();
        estadoEMuestra = new javax.swing.JLabel();
        estadoSMuestra = new javax.swing.JLabel();
        estadoVMuestra = new javax.swing.JLabel();
        fechaSacriMuestra = new javax.swing.JLabel();
        idMuestra = new javax.swing.JLabel();
        buscarBoton = new javax.swing.JButton();
        cambiarSexoLabel = new javax.swing.JLabel();
        cambiarRazaLabel = new javax.swing.JLabel();
        cambiarFechaNacLabel = new javax.swing.JLabel();
        cambiarProposiLabel = new javax.swing.JLabel();
        cambiarFechaIncoLabel = new javax.swing.JLabel();
        cambiarEstadoLabel = new javax.swing.JLabel();
        cambiarFechaSacLabel = new javax.swing.JLabel();
        eliminarBoton = new javax.swing.JButton();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Principal");
        setFont(new java.awt.Font("Century Gothic", 0, 10)); // NOI18N
        setMaximumSize(new java.awt.Dimension(1280, 745));
        setMinimumSize(new java.awt.Dimension(1280, 745));
        setPreferredSize(new java.awt.Dimension(1280, 745));
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 745));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nombreUsuarioLabel.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        nombreUsuarioLabel.setText("Nombre");
        getContentPane().add(nombreUsuarioLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, -1, -1));

        usuarioLabel.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        usuarioLabel.setText("Usuario:");
        getContentPane().add(usuarioLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        panelFechaSacrificio.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelSacrificioPanel.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        labelSacrificioPanel.setText("Seleccione la fecha de sacricio del bovino:");
        panelFechaSacrificio.add(labelSacrificioPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        confirmarFechaPanel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        confirmarFechaPanel.setText("Confirmar");
        confirmarFechaPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarFechaPanelActionPerformed(evt);
            }
        });
        panelFechaSacrificio.add(confirmarFechaPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 100, 30));
        panelFechaSacrificio.add(calendarioSacrificio, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 140, 30));

        fondoPanelFechaSacrificio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo Blanco.png"))); // NOI18N
        panelFechaSacrificio.add(fondoPanelFechaSacrificio, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(panelFechaSacrificio, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 360, 280, 70));

        panelAgregar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelRaza.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelRaza.setText("Raza:");
        panelAgregar.add(labelRaza, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, -1));

        agregarLabel.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        agregarLabel.setForeground(new java.awt.Color(204, 0, 0));
        agregarLabel.setText("AGREGAR ANIMAL");
        panelAgregar.add(agregarLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));

        labelUso.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelUso.setText("Propósito:");
        panelAgregar.add(labelUso, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 260, -1, -1));

        labelIncorp.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelIncorp.setText("Fecha de incorporación:");
        panelAgregar.add(labelIncorp, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 190, -1, -1));

        labelNace.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelNace.setText("Fecha de nacimiento:");
        panelAgregar.add(labelNace, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 120, -1, -1));

        labelMadre.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelMadre.setText("Número de identificación de la madre:");
        panelAgregar.add(labelMadre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, -1, -1));

        labelSexo.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelSexo.setText("Sexo:");
        panelAgregar.add(labelSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        labelId.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        labelId.setText("Número de identificación:");
        panelAgregar.add(labelId, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        textoId.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        panelAgregar.add(textoId, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 110, -1));

        textoRaza.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        panelAgregar.add(textoRaza, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 110, -1));

        textoIdMadre.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        panelAgregar.add(textoIdMadre, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 340, 110, -1));

        comboSexo.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        comboSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Macho", "Hembra" }));
        panelAgregar.add(comboSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, -1, -1));

        comboProceso.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        comboProceso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Leche", "Carne", "Doble" }));
        panelAgregar.add(comboProceso, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 260, -1, -1));

        avisoId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        avisoId.setForeground(new java.awt.Color(0, 51, 204));
        avisoId.setText("solo el NUMERO");
        panelAgregar.add(avisoId, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 370, -1, -1));

        avisoIdMadre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        avisoIdMadre.setForeground(new java.awt.Color(0, 51, 204));
        avisoIdMadre.setText("solo el NUMERO");
        panelAgregar.add(avisoIdMadre, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, -1, -1));

        cancelarAgregarBoton.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cancelarAgregarBoton.setText("Cancelar");
        cancelarAgregarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarAgregarBotonActionPerformed(evt);
            }
        });
        panelAgregar.add(cancelarAgregarBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 340, -1, -1));

        confirmarAgregarBoton.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        confirmarAgregarBoton.setText("Agregar");
        confirmarAgregarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarAgregarBotonActionPerformed(evt);
            }
        });
        panelAgregar.add(confirmarAgregarBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 340, -1, -1));

        calendarioIncorporacion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        calendarioIncorporacion.setMaxSelectableDate(new java.util.Date(253370786476000L));
        calendarioIncorporacion.setMinSelectableDate(new java.util.Date(-62135747924000L));
        panelAgregar.add(calendarioIncorporacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 190, 130, 30));

        calendarioNacimiento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        calendarioNacimiento.setMaxSelectableDate(new java.util.Date(253370786476000L));
        calendarioNacimiento.setMinSelectableDate(new java.util.Date(-62135747924000L));
        panelAgregar.add(calendarioNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 120, 130, 30));

        fondoPanel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo Blanco.png"))); // NOI18N
        fondoPanel.setText("fondoPanel");
        panelAgregar.add(fondoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(-60, -220, -1, 1020));

        getContentPane().add(panelAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 1150, 530));

        panelCambios.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botonConfirmarCambios.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        botonConfirmarCambios.setText("Confirmar");
        botonConfirmarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConfirmarCambiosActionPerformed(evt);
            }
        });
        panelCambios.add(botonConfirmarCambios, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, -1, -1));

        botonCancelarCambios.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        botonCancelarCambios.setText("Cancelar");
        botonCancelarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarCambiosActionPerformed(evt);
            }
        });
        panelCambios.add(botonCancelarCambios, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, -1, -1));

        seleccionCambioProposito.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        seleccionCambioProposito.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Leche", "Carne", "Doble" }));
        panelCambios.add(seleccionCambioProposito, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 90, -1));
        panelCambios.add(calendarioCambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 130, 30));

        labelCambioIncorporacion.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        labelCambioIncorporacion.setText("Seleccione la fecha de incorporación:");
        panelCambios.add(labelCambioIncorporacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        tituloCambiosLabel.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        tituloCambiosLabel.setText("CAMBIO DE DATOS");
        panelCambios.add(tituloCambiosLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, -1, -1));

        labelCambioProposito.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        labelCambioProposito.setText("Seleccione el propósito del animal:");
        panelCambios.add(labelCambioProposito, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        labelCambioNacimiento.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        labelCambioNacimiento.setText("Seleccione la fecha de nacimiento:");
        panelCambios.add(labelCambioNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        labelCambioSacrificio.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        labelCambioSacrificio.setText("Seleccione la fecha de sacrificio:");
        panelCambios.add(labelCambioSacrificio, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        getContentPane().add(panelCambios, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 340, 370, 160));

        sexoLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        sexoLabel.setText("Sexo:");
        getContentPane().add(sexoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));

        datosAnimalLabel.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        datosAnimalLabel.setText("DATOS DEL ANIMAL");
        getContentPane().add(datosAnimalLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        razaLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        razaLabel.setText("Raza:");
        getContentPane().add(razaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, -1, -1));

        fechaNacLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        fechaNacLabel.setText("Fecha de nacimiento:");
        getContentPane().add(fechaNacLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, -1, -1));

        propositoLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        propositoLabel.setText("Propósito:");
        getContentPane().add(propositoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, -1, -1));

        madreLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        madreLabel.setText("Código de la madre:");
        getContentPane().add(madreLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 260, -1, -1));

        fechaSacrificioLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        fechaSacrificioLabel.setText("Fecha de sacrificio:");
        getContentPane().add(fechaSacrificioLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 450, -1, -1));

        codIdLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        codIdLabel.setText("Código de identificación:");
        getContentPane().add(codIdLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        fechaIncorpLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        fechaIncorpLabel.setText("Fecha de incorporación al programa:");
        getContentPane().add(fechaIncorpLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 320, -1, -1));

        estadoLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        estadoLabel.setText("Estado:");
        getContentPane().add(estadoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 380, -1, -1));

        agregarAnimalBoton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        agregarAnimalBoton.setText("Agregar animal");
        agregarAnimalBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarAnimalBotonActionPerformed(evt);
            }
        });
        getContentPane().add(agregarAnimalBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 560, 210, -1));

        buscarTextField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        getContentPane().add(buscarTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 620, 190, -1));

        buscarLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        buscarLabel.setText("Buscar animal:");
        getContentPane().add(buscarLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 620, -1, -1));

        recomendacionBuscarLabel.setFont(new java.awt.Font("Century Gothic", 0, 10)); // NOI18N
        recomendacionBuscarLabel.setForeground(new java.awt.Color(0, 51, 255));
        recomendacionBuscarLabel.setText("Digitar solo el NÚMERO de identificación");
        getContentPane().add(recomendacionBuscarLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 650, -1, -1));

        generarCertificadoBoton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        generarCertificadoBoton.setText("Generar certificado");
        generarCertificadoBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarCertificadoBotonActionPerformed(evt);
            }
        });
        getContentPane().add(generarCertificadoBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 510, 210, -1));

        salirBoton.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        salirBoton.setText("SALIR");
        salirBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirBotonActionPerformed(evt);
            }
        });
        getContentPane().add(salirBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 660, -1, -1));

        sexoMMuestra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sexoMMuestra.setText("MACHO");
        getContentPane().add(sexoMMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, -1, -1));

        sexoHMuestra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sexoHMuestra.setText("HEMBRA");
        getContentPane().add(sexoHMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, -1, -1));

        sexoVMuestra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sexoVMuestra.setText("- - - -");
        getContentPane().add(sexoVMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, -1, -1));

        razaMuestra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        razaMuestra.setText("ZZZZZZ");
        getContentPane().add(razaMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, -1, -1));

        fechaNacMuestra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        fechaNacMuestra.setText("DD/MM/AAAA");
        getContentPane().add(fechaNacMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 450, -1, -1));

        propositoMuestra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        propositoMuestra.setText("ZZZZZZ");
        getContentPane().add(propositoMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 520, -1, -1));

        codMadreMuestra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        codMadreMuestra.setForeground(new java.awt.Color(0, 102, 255));
        codMadreMuestra.setText("CO-YYYYYY");
        codMadreMuestra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                codMadreMuestraMouseClicked(evt);
            }
        });
        getContentPane().add(codMadreMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 260, -1, -1));

        fechaIncorpMuestra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        fechaIncorpMuestra.setText("DD/MM/AAAA");
        getContentPane().add(fechaIncorpMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 320, -1, -1));

        estadoEMuestra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        estadoEMuestra.setText("EN EXPLOTACIÓN");
        getContentPane().add(estadoEMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 380, -1, -1));

        estadoSMuestra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        estadoSMuestra.setText("SACRIFICADO");
        getContentPane().add(estadoSMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 380, -1, -1));

        estadoVMuestra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        estadoVMuestra.setText("- - - -");
        getContentPane().add(estadoVMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 380, -1, -1));

        fechaSacriMuestra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        fechaSacriMuestra.setText("DD/MM/AAAA");
        getContentPane().add(fechaSacriMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 450, -1, -1));

        idMuestra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        idMuestra.setText("CO-XXXXXX");
        getContentPane().add(idMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 260, -1, -1));

        buscarBoton.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        buscarBoton.setText("BUSCAR");
        buscarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarBotonActionPerformed(evt);
            }
        });
        getContentPane().add(buscarBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 620, -1, -1));

        cambiarSexoLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cambiarSexoLabel.setForeground(new java.awt.Color(0, 102, 204));
        cambiarSexoLabel.setText("cambiar");
        cambiarSexoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cambiarSexoLabelMouseClicked(evt);
            }
        });
        getContentPane().add(cambiarSexoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, -1, -1));

        cambiarRazaLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cambiarRazaLabel.setForeground(new java.awt.Color(0, 102, 204));
        cambiarRazaLabel.setText("cambiar");
        cambiarRazaLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cambiarRazaLabelMouseClicked(evt);
            }
        });
        getContentPane().add(cambiarRazaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 390, -1, -1));

        cambiarFechaNacLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cambiarFechaNacLabel.setForeground(new java.awt.Color(0, 102, 204));
        cambiarFechaNacLabel.setText("cambiar");
        cambiarFechaNacLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cambiarFechaNacLabelMouseClicked(evt);
            }
        });
        getContentPane().add(cambiarFechaNacLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 460, -1, -1));

        cambiarProposiLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cambiarProposiLabel.setForeground(new java.awt.Color(0, 102, 204));
        cambiarProposiLabel.setText("cambiar");
        cambiarProposiLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cambiarProposiLabelMouseClicked(evt);
            }
        });
        getContentPane().add(cambiarProposiLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 530, -1, -1));

        cambiarFechaIncoLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cambiarFechaIncoLabel.setForeground(new java.awt.Color(0, 102, 204));
        cambiarFechaIncoLabel.setText("cambiar");
        cambiarFechaIncoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cambiarFechaIncoLabelMouseClicked(evt);
            }
        });
        getContentPane().add(cambiarFechaIncoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 330, -1, -1));

        cambiarEstadoLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cambiarEstadoLabel.setForeground(new java.awt.Color(0, 102, 204));
        cambiarEstadoLabel.setText("cambiar");
        cambiarEstadoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cambiarEstadoLabelMouseClicked(evt);
            }
        });
        getContentPane().add(cambiarEstadoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 390, -1, -1));

        cambiarFechaSacLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cambiarFechaSacLabel.setForeground(new java.awt.Color(0, 102, 204));
        cambiarFechaSacLabel.setText("cambiar");
        cambiarFechaSacLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cambiarFechaSacLabelMouseClicked(evt);
            }
        });
        getContentPane().add(cambiarFechaSacLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 460, -1, -1));

        eliminarBoton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        eliminarBoton.setText("Eliminar");
        eliminarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarBotonActionPerformed(evt);
            }
        });
        getContentPane().add(eliminarBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 580, -1, -1));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/PrincipalCattleManager.png"))); // NOI18N
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iniciaPanelCambio() {
        labelCambioProposito.setVisible(false);
        seleccionCambioProposito.setVisible(false);
        labelCambioIncorporacion.setVisible(false);
        labelCambioNacimiento.setVisible(false);
        labelCambioSacrificio.setVisible(false);
        calendarioCambio.setVisible(false);

        //Botones que se ocultarán
        eliminarBoton.setVisible(false);
        generarCertificadoBoton.setVisible(false);
        agregarAnimalBoton.setVisible(false);
        buscarBoton.setVisible(false);
        buscarLabel.setVisible(false);
        buscarTextField.setVisible(false);
        recomendacionBuscarLabel.setVisible(false);
    }

    private void panelDeCambio(int seleccion) {
        iniciaPanelCambio();
        switch (seleccion) {
            case 1: //Fecha nacimiento
                labelCambioNacimiento.setVisible(true);
                calendarioCambio.setVisible(true);
                panelCambios.setVisible(true);
                cambio = 1;
                break;
            case 2: //Propósito
                labelCambioProposito.setVisible(true);
                seleccionCambioProposito.setVisible(true);
                panelCambios.setVisible(true);
                cambio = 2;
                break;
            case 3: // Fecha incorporación
                labelCambioIncorporacion.setVisible(true);
                calendarioCambio.setVisible(true);
                panelCambios.setVisible(true);
                cambio = 3;
                break;
            case 4: // Fecha sacrificio
                labelCambioSacrificio.setVisible(true);
                calendarioCambio.setVisible(true);
                panelCambios.setVisible(true);
                cambio = 4;
                break;
            default:
                break;

        }
    }

    private void colocarDatos(Vaca seMuestra) {
        animalActual = seMuestra;
        if (arbol.vacio()) {
            cambiarEstadoLabel.setVisible(false);
            cambiarFechaSacLabel.setVisible(false);
            cambiarFechaIncoLabel.setVisible(false);
            cambiarProposiLabel.setVisible(false);
            cambiarFechaNacLabel.setVisible(false);
            cambiarRazaLabel.setVisible(false);
            cambiarSexoLabel.setVisible(false);
            eliminarBoton.setVisible(false);
            generarCertificadoBoton.setVisible(false);
            buscarBoton.setVisible(false);
            buscarLabel.setVisible(false);
            buscarTextField.setVisible(false);
            recomendacionBuscarLabel.setVisible(false);
            sexoMMuestra.setVisible(false);
            sexoHMuestra.setVisible(false);
            sexoVMuestra.setVisible(true);
            idMuestra.setText("CO-XXXXXX");
            razaMuestra.setText("ZZZZZZ");
            fechaNacMuestra.setText("DD/MM/AAAA");
            propositoMuestra.setText("ZZZZZZ");
            fechaIncorpMuestra.setText("DD/MM/AAAA");
            fechaSacriMuestra.setText("DD/MM/AAAA");
            codMadreMuestra.setText("Sin información");
            estadoSMuestra.setVisible(false);
            estadoEMuestra.setVisible(false);
            estadoVMuestra.setVisible(true);
        } else {
            buscarBoton.setVisible(true);
            buscarLabel.setVisible(true);
            buscarTextField.setVisible(true);
            sexoVMuestra.setVisible(false);
            estadoVMuestra.setVisible(false);
            recomendacionBuscarLabel.setVisible(true);
            if (usuarioAdmin == 0) {//Sí es administrador mostrará las opciones para modificar los datos
                cambiarEstadoLabel.setVisible(true);
                cambiarFechaSacLabel.setVisible(true);
                cambiarFechaIncoLabel.setVisible(true);
                cambiarProposiLabel.setVisible(true);
                cambiarFechaNacLabel.setVisible(true);
                cambiarRazaLabel.setVisible(true);
                cambiarSexoLabel.setVisible(true);
                eliminarBoton.setVisible(true);
            } else {//No es admin no lo hará
                if (animalActual.isEstado()) {//El animal fue sacrificado
                    cambiarEstadoLabel.setVisible(false);
                } else {//El animal no ha sido sacrificado
                    cambiarEstadoLabel.setVisible(true);
                }
                cambiarFechaSacLabel.setVisible(false);
                cambiarFechaIncoLabel.setVisible(false);
                cambiarProposiLabel.setVisible(false);
                cambiarFechaNacLabel.setVisible(false);
                cambiarRazaLabel.setVisible(false);
                cambiarSexoLabel.setVisible(false);
                eliminarBoton.setVisible(false);
            }
            idMuestra.setText("CO-" + String.valueOf(seMuestra.getIdentificacion()));
            if (seMuestra.isSexo()) {
                sexoMMuestra.setVisible(true);
                sexoHMuestra.setVisible(false);
            } else {
                sexoMMuestra.setVisible(false);
                sexoHMuestra.setVisible(true);
            }
            razaMuestra.setText(seMuestra.getRaza());
            fechaNacMuestra.setText(formatoFecha.format(seMuestra.getFechaNacimiento()));
            propositoMuestra.setText(seMuestra.getUso());
            codMadreMuestra.setText("CO-" + String.valueOf(seMuestra.getCodigoMadre()));
            vacaMadre = seMuestra.getCodigoMadre();
            fechaIncorpMuestra.setText(formatoFecha.format(seMuestra.getFechaIncorporacion()));
            if (seMuestra.isEstado()) {//Si es true la vaca fue sacrificada
                estadoSMuestra.setVisible(true);
                estadoEMuestra.setVisible(false);
                fechaSacriMuestra.setText(formatoFecha.format(seMuestra.getFechaSacrificio()));
                fechaSacriMuestra.setVisible(true);
                fechaSacrificioLabel.setVisible(true);
                if (usuarioAdmin == 0) {
                    cambiarFechaSacLabel.setVisible(true);
                }
                generarCertificadoBoton.setVisible(true);
            } else {//Si es false la vaca está viva
                estadoSMuestra.setVisible(false);
                estadoEMuestra.setVisible(true);
                fechaSacriMuestra.setVisible(false);
                fechaSacrificioLabel.setVisible(false);
                cambiarFechaSacLabel.setVisible(false);
                generarCertificadoBoton.setVisible(false);
            }
        }

    }

    private void agregarAnimalBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarAnimalBotonActionPerformed
        //Botón de agregar animal

        panelAgregar.setVisible(true);


    }//GEN-LAST:event_agregarAnimalBotonActionPerformed

    private void cancelarAgregarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarAgregarBotonActionPerformed
        //Cancelar en el panel de agregar
        panelAgregar.setVisible(false);
    }//GEN-LAST:event_cancelarAgregarBotonActionPerformed

    private void salirBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirBotonActionPerformed
        // Boton salir

        int n = JOptionPane.showConfirmDialog(null, "Se cerrará el programa", "", JOptionPane.OK_CANCEL_OPTION);

        if (n == 0) {
            this.dispose();
        } else {

        }
    }//GEN-LAST:event_salirBotonActionPerformed

    private void confirmarAgregarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarAgregarBotonActionPerformed
        // Boton de agregar en el panel

        try {
            boolean sexoB = false;
            int idMadre = Integer.valueOf(textoIdMadre.getText());
            String uso = "";
            int id = Integer.valueOf(textoId.getText());
            String raza = textoRaza.getText();
            int sexo = comboSexo.getSelectedIndex();
            if (sexo == 1) {
                sexoB = false;
            } else {
                sexoB = true;
            }
            int proposito = comboProceso.getSelectedIndex();
            if (proposito == 0) {
                uso = "Leche";
            } else if (proposito == 1) {
                uso = "Carne";
            } else {
                uso = "Doble";
            }
            if (calendarioNacimiento.getDate().compareTo(calendarioIncorporacion.getDate()) == 1) {
                JOptionPane.showMessageDialog(null, "La fecha de nacimiento no puede ser mayor a la fecha de incorporación");
            } else {
                if (idMadre == id) {
                    JOptionPane.showMessageDialog(null, "El código no puede ser el mismo de la madre");
                } else {
                    Vaca nuevoAnimal = new Vaca(id, sexoB, raza, idMadre, calendarioNacimiento.getDate(), calendarioIncorporacion.getDate(), uso);
                    arbol.insertarNodoArbol(nuevoAnimal);
                    animalActual = nuevoAnimal;
                    JOptionPane.showMessageDialog(null, "Animal agregado");
                    panelAgregar.setVisible(false);
                    textoId.setText("");
                    textoIdMadre.setText("");
                    textoRaza.setText("");
                    colocarDatos(animalActual);
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Verifique los datos");
        }
    }//GEN-LAST:event_confirmarAgregarBotonActionPerformed

    private void generarCertificadoBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarCertificadoBotonActionPerformed
        // Boton para generar el certificado
        try {
            DatosCertificado datos = new DatosCertificado();
            datos.generarCertificado(animalActual);
            JOptionPane.showMessageDialog(null, "Certificado generado");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se pudo generar");
        }
    }//GEN-LAST:event_generarCertificadoBotonActionPerformed

    private void buscarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarBotonActionPerformed
        // Boton para buscar animal

        try {
            int id = Integer.valueOf(buscarTextField.getText());
            animalActual = arbol.buscarEnArbol(id);
            if (animalActual == null) {
                JOptionPane.showMessageDialog(null, "No se encontró el código");
            } else {
                colocarDatos(animalActual);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Verifique los datos");
        }

    }//GEN-LAST:event_buscarBotonActionPerformed

    private void codMadreMuestraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_codMadreMuestraMouseClicked
        // Cuando se hace clic en el id de la madre
        try {
            Vaca animal = arbol.buscarEnArbol(vacaMadre);
            if (animal != null) {
                animalActual = animal;
                colocarDatos(animalActual);
            } else {
                JOptionPane.showMessageDialog(null, "No se encontró el ejemplar");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se encontró el ejemplar");
        }
    }//GEN-LAST:event_codMadreMuestraMouseClicked

    private void eliminarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarBotonActionPerformed
        // Botón para eliminar una vaca
        if (arbol.vacio()) {
        } else {
            arbol.eliminarElemento(animalActual.getIdentificacion());
            if (arbol.getRaiz() != null) {
                animalActual = arbol.getRaiz().getDato();
                colocarDatos(animalActual);
            } else {
                animalActual = null;
                colocarDatos(animalActual);
            }
        }
    }//GEN-LAST:event_eliminarBotonActionPerformed

    private void cambiarSexoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cambiarSexoLabelMouseClicked
        // Clic a cambiar sexo
        int n = JOptionPane.showConfirmDialog(null, "Se cambiará el sexo del animal. Selecciona CANCELAR para no guardar los cambios", "", JOptionPane.OK_CANCEL_OPTION);
        if (n == 0) {
            //OK
            if (animalActual.isSexo()) {
                animalActual.setSexo(false);
                arbol.modificarElemento(animalActual.getIdentificacion(), animalActual);
                colocarDatos(animalActual);
            } else {
                animalActual.setSexo(true);
                arbol.modificarElemento(animalActual.getIdentificacion(), animalActual);
                colocarDatos(animalActual);
            }
        }
    }//GEN-LAST:event_cambiarSexoLabelMouseClicked

    private void cambiarRazaLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cambiarRazaLabelMouseClicked
        // Clic a cambiar raza
        Vaca temporal = animalActual;
        try {
            String nuevaRaza = JOptionPane.showInputDialog("Digite la raza");
            animalActual.setRaza(nuevaRaza);
            arbol.modificarElemento(animalActual.getIdentificacion(), temporal);
            colocarDatos(animalActual);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cambiarRazaLabelMouseClicked

    private void cambiarEstadoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cambiarEstadoLabelMouseClicked
        // Cambia el estado de la vaca:
        try {
            int n = JOptionPane.showConfirmDialog(null, "Se cambiará el estado del animal. Selecciona CANCELAR para no guardar los cambios", "", JOptionPane.OK_CANCEL_OPTION);
            if (n == 0) {
                //OK
                if (animalActual.isEstado()) { //La vaca estaba muerta
                    animalActual.setEstado(false);
                    arbol.modificarElemento(animalActual.getIdentificacion(), animalActual);
                    colocarDatos(animalActual);
                } else { //Vaca ESTABA viva
                    panelFechaSacrificio.setVisible(true);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error");
        }
    }//GEN-LAST:event_cambiarEstadoLabelMouseClicked

    private void botonConfirmarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConfirmarCambiosActionPerformed
        // Confirmar cambios en el panel
        int modifica = 0;
        switch (cambio) {
            case 1: //Fecha nacimiento
                try {
                    if (calendarioCambio.getDate().compareTo(animalActual.getFechaIncorporacion()) == 1) {
                        JOptionPane.showMessageDialog(null, "La fecha de nacimiento no puede ser mayor a la fecha de incorporación");
                    } else if (animalActual.getFechaSacrificio() != null) {
                        if (calendarioCambio.getDate().compareTo(animalActual.getFechaSacrificio()) == 1) {
                            JOptionPane.showMessageDialog(null, "La fecha de nacimiento no puede ser mayor a la fecha de sacrificio");
                        }
                    } else {
                        animalActual.setFechaNacimiento(calendarioCambio.getDate());
                        modifica = 1;
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error");
                }
                break;
            case 2: //Propósito
                try {
                    int seleccion = seleccionCambioProposito.getSelectedIndex();
                    modifica = 1;
                    switch (seleccion) {
                        case 0:
                            animalActual.setUso("Leche");
                            break;
                        case 1:
                            animalActual.setUso("Carne");
                            break;
                        case 2:
                            animalActual.setUso("Doble");
                            break;
                        default:
                            break;
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error");
                }
                break;
            case 3: // Fecha incorporación
                try {
                    if (calendarioCambio.getDate().compareTo(animalActual.getFechaNacimiento()) == -1) {
                        JOptionPane.showMessageDialog(null, "La fecha de incorporación no puede ser menor a la fecha de nacimiento");
                    } else if (animalActual.getFechaSacrificio() != null) {
                        if (calendarioCambio.getDate().compareTo(animalActual.getFechaSacrificio()) == 1) {
                            JOptionPane.showMessageDialog(null, "La fecha de incorporación no puede ser mayor a la fecha de sacrificio");
                        }
                    } else {
                        animalActual.setFechaIncorporacion(calendarioCambio.getDate());
                        modifica = 1;
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error");
                }
                break;
            case 4: // Fecha sacrificio
                try {
                    if (calendarioCambio.getDate().compareTo(animalActual.getFechaNacimiento()) == -1 || calendarioCambio.getDate().compareTo(animalActual.getFechaIncorporacion()) == -1) {
                        JOptionPane.showMessageDialog(null, "La fecha de sacrificio no puede ser menor a la fecha de nacimiento ni de incorporación");
                    } else {
                        animalActual.setFechaSacrificio(calendarioCambio.getDate());
                        modifica = 1;
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error");
                }
                break;
            default:
                break;
        }
        if (modifica != 0) {
            arbol.modificarElemento(animalActual.getIdentificacion(), animalActual);
        }
        colocarDatos(animalActual);
        panelCambios.setVisible(false);
        agregarAnimalBoton.setVisible(true);
        buscarBoton.setVisible(true);
        buscarLabel.setVisible(true);
        buscarTextField.setVisible(true);
        recomendacionBuscarLabel.setVisible(true);
    }//GEN-LAST:event_botonConfirmarCambiosActionPerformed

    private void cambiarFechaNacLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cambiarFechaNacLabelMouseClicked
        // Clic a cambiar fecha de nacimiento
        panelDeCambio(1);
    }//GEN-LAST:event_cambiarFechaNacLabelMouseClicked

    private void cambiarProposiLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cambiarProposiLabelMouseClicked
        // Clic a cambiar propósito
        panelDeCambio(2);
    }//GEN-LAST:event_cambiarProposiLabelMouseClicked

    private void cambiarFechaIncoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cambiarFechaIncoLabelMouseClicked
        // Clic cambiar fehca incorporación
        panelDeCambio(3);
    }//GEN-LAST:event_cambiarFechaIncoLabelMouseClicked

    private void cambiarFechaSacLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cambiarFechaSacLabelMouseClicked
        // Clic cambiar fecha sacrificio
        panelDeCambio(4);
    }//GEN-LAST:event_cambiarFechaSacLabelMouseClicked

    private void botonCancelarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarCambiosActionPerformed
        // Boton cancelar cambios panel
        panelCambios.setVisible(false);
        colocarDatos(animalActual);
        agregarAnimalBoton.setVisible(true);
        buscarBoton.setVisible(true);
        buscarLabel.setVisible(true);
        buscarTextField.setVisible(true);
        recomendacionBuscarLabel.setVisible(true);
    }//GEN-LAST:event_botonCancelarCambiosActionPerformed

    private void confirmarFechaPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarFechaPanelActionPerformed
        // Confirmar fecha de sacrificio
        if (calendarioSacrificio.getDate().compareTo(animalActual.getFechaNacimiento()) == -1 || calendarioSacrificio.getDate().compareTo(animalActual.getFechaIncorporacion()) == -1) {
            JOptionPane.showMessageDialog(null, "La fecha de sacrificio no puede ser menor a la fecha de nacimiento ni de incorporación");
        } else if (calendarioSacrificio.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Seleccione la fecha");
        } else {
            animalActual.setEstado(true);
            animalActual.setFechaSacrificio(calendarioSacrificio.getDate());
            arbol.modificarElemento(animalActual.getIdentificacion(), animalActual);
            panelFechaSacrificio.setVisible(false);
            colocarDatos(animalActual);
        }
    }//GEN-LAST:event_confirmarFechaPanelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarAnimalBoton;
    private javax.swing.JLabel agregarLabel;
    private javax.swing.JLabel avisoId;
    private javax.swing.JLabel avisoIdMadre;
    private javax.swing.JButton botonCancelarCambios;
    private javax.swing.JButton botonConfirmarCambios;
    private javax.swing.JButton buscarBoton;
    private javax.swing.JLabel buscarLabel;
    private javax.swing.JTextField buscarTextField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private com.toedter.calendar.JDateChooser calendarioCambio;
    private com.toedter.calendar.JDateChooser calendarioIncorporacion;
    private com.toedter.calendar.JDateChooser calendarioNacimiento;
    private com.toedter.calendar.JDateChooser calendarioSacrificio;
    private javax.swing.JLabel cambiarEstadoLabel;
    private javax.swing.JLabel cambiarFechaIncoLabel;
    private javax.swing.JLabel cambiarFechaNacLabel;
    private javax.swing.JLabel cambiarFechaSacLabel;
    private javax.swing.JLabel cambiarProposiLabel;
    private javax.swing.JLabel cambiarRazaLabel;
    private javax.swing.JLabel cambiarSexoLabel;
    private javax.swing.JButton cancelarAgregarBoton;
    private javax.swing.JLabel codIdLabel;
    private javax.swing.JLabel codMadreMuestra;
    private javax.swing.JComboBox<String> comboProceso;
    private javax.swing.JComboBox<String> comboSexo;
    private javax.swing.JButton confirmarAgregarBoton;
    private javax.swing.JButton confirmarFechaPanel;
    private javax.swing.JLabel datosAnimalLabel;
    private javax.swing.JButton eliminarBoton;
    private javax.swing.JLabel estadoEMuestra;
    private javax.swing.JLabel estadoLabel;
    private javax.swing.JLabel estadoSMuestra;
    private javax.swing.JLabel estadoVMuestra;
    private javax.swing.JLabel fechaIncorpLabel;
    private javax.swing.JLabel fechaIncorpMuestra;
    private javax.swing.JLabel fechaNacLabel;
    private javax.swing.JLabel fechaNacMuestra;
    private javax.swing.JLabel fechaSacriMuestra;
    private javax.swing.JLabel fechaSacrificioLabel;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel fondoPanel;
    private javax.swing.JLabel fondoPanelFechaSacrificio;
    private javax.swing.JButton generarCertificadoBoton;
    private javax.swing.JLabel idMuestra;
    private javax.swing.JLabel labelCambioIncorporacion;
    private javax.swing.JLabel labelCambioNacimiento;
    private javax.swing.JLabel labelCambioProposito;
    private javax.swing.JLabel labelCambioSacrificio;
    private javax.swing.JLabel labelId;
    private javax.swing.JLabel labelIncorp;
    private javax.swing.JLabel labelMadre;
    private javax.swing.JLabel labelNace;
    private javax.swing.JLabel labelRaza;
    private javax.swing.JLabel labelSacrificioPanel;
    private javax.swing.JLabel labelSexo;
    private javax.swing.JLabel labelUso;
    private javax.swing.JLabel madreLabel;
    private javax.swing.JLabel nombreUsuarioLabel;
    private javax.swing.JPanel panelAgregar;
    private javax.swing.JPanel panelCambios;
    private javax.swing.JPanel panelFechaSacrificio;
    private javax.swing.JLabel propositoLabel;
    private javax.swing.JLabel propositoMuestra;
    private javax.swing.JLabel razaLabel;
    private javax.swing.JLabel razaMuestra;
    private javax.swing.JLabel recomendacionBuscarLabel;
    private javax.swing.JButton salirBoton;
    private javax.swing.JComboBox<String> seleccionCambioProposito;
    private javax.swing.JLabel sexoHMuestra;
    private javax.swing.JLabel sexoLabel;
    private javax.swing.JLabel sexoMMuestra;
    private javax.swing.JLabel sexoVMuestra;
    private javax.swing.JTextField textoId;
    private javax.swing.JTextField textoIdMadre;
    private javax.swing.JTextField textoRaza;
    private javax.swing.JLabel tituloCambiosLabel;
    private javax.swing.JLabel usuarioLabel;
    // End of variables declaration//GEN-END:variables
}
